# %% import libraries
import torch
import torch.nn as nn
import torchvision.transforms as T
import warnings
warnings.filterwarnings('ignore')
from torch.utils.data import DataLoader

from dfx import backbone
from dfx import get_path
from dfx import umbalanced_dataset
from dfx import testing

# %% Settings for testing phase
trans = T.Compose([
    T.Resize((256, 256)),
    T.ToTensor(),
    T.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
])

trans_vits = T.Compose([
    T.Resize((256, 256)),
    T.CenterCrop((224,224)),
    T.ToTensor(),
    T.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
])

datasets_path = get_path('dataset')
guidance_path = get_path('guidance')
models_dir = get_path('models')
generalization_path = get_path('data_generalization')
robustnessdset_path = get_path('data_robustness')

test_dm = umbalanced_dataset(dset_dir=datasets_path, guidance=guidance_path, main_class='dm_generated', for_overfitting=False, for_testing=True, perc_to_take=1, transforms=trans)
test_gan = umbalanced_dataset(dset_dir=datasets_path, guidance=guidance_path, main_class='gan_generated', for_overfitting=False, for_testing=True, perc_to_take=1, transforms=trans)
test_real = umbalanced_dataset(dset_dir=datasets_path, guidance=guidance_path, main_class='real', for_overfitting=False, for_testing=True, perc_to_take=1, transforms=trans)
test_dm_vits = umbalanced_dataset(dset_dir=datasets_path, guidance=guidance_path, main_class='dm_generated', for_overfitting=False, for_testing=True, perc_to_take=1, transforms=trans_vits)
test_gan_vits = umbalanced_dataset(dset_dir=datasets_path, guidance=guidance_path, main_class='gan_generated', for_overfitting=False, for_testing=True, perc_to_take=1, transforms=trans_vits)
test_real_vits = umbalanced_dataset(dset_dir=datasets_path, guidance=guidance_path, main_class='real', for_overfitting=False, for_testing=True, perc_to_take=1, transforms=trans_vits)

dmloader = DataLoader(test_dm, batch_size=1, shuffle=True, num_workers=0, drop_last=False)
ganloader = DataLoader(test_gan, batch_size=1, shuffle=True, num_workers=0, drop_last=False)
realloader = DataLoader(test_real, batch_size=1, shuffle=True, num_workers=0, drop_last=False)
dmloader_vits = DataLoader(test_dm_vits, batch_size=1, shuffle=True, num_workers=0, drop_last=False)
ganloader_vits = DataLoader(test_gan_vits, batch_size=1, shuffle=True, num_workers=0, drop_last=False)
realloader_vits = DataLoader(test_real_vits, batch_size=1, shuffle=True, num_workers=0, drop_last=False)

# %% loading model
dense121dm = backbone('densenet121', pretrained=False, finetuning=True, num_classes=2)
dense121dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/dense121.pt'))
dense161dm = backbone('densenet161', pretrained=False, finetuning=True, num_classes=2)
dense161dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/dense161.pt'))
dense169dm = backbone('densenet169', pretrained=False, finetuning=True, num_classes=2)
dense169dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/dense169.pt'))
dense201dm = backbone('densenet201', pretrained=False, finetuning=True, num_classes=2)
dense201dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/dense201.pt'))
effb0dm = backbone('efficientnet_b0', pretrained=False, finetuning=True, num_classes=2)
effb0dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/effb0.pt'))
effb4dm = backbone('efficientnet_b4', pretrained=False, finetuning=True, num_classes=2)
effb4dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/effb4.pt'))
effwdb0dm = backbone('efficientnet_widese_b0', pretrained=False, finetuning=True, num_classes=2)
effwdb0dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/effwdb0.pt'))
effwdb4dm = backbone('efficientnet_widese_b4', pretrained=False, finetuning=True, num_classes=2)
effwdb4dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/effwdb4.pt'))
# googldm = backbone('googlenet', pretrained=False, finetuning=True, num_classes=2)
# googldm.load_state_dict(torch.load(models_dir+'/dm-overfitting/googl.pt'))
res18dm = backbone('resnet18', pretrained=False, finetuning=True, num_classes=2)
res18dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/res18.pt'))
res34dm = backbone('resnet34', pretrained=False, finetuning=True, num_classes=2)
res34dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/res34.pt'))
res50dm = backbone('resnet50', pretrained=False, finetuning=True, num_classes=2)
res50dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/res50.pt'))
res101dm = backbone('resnet101', pretrained=False, finetuning=True, num_classes=2)
res101dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/res101.pt'))
res152dm = backbone('resnet152', pretrained=False, finetuning=True, num_classes=2)
res152dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/res152.pt'))
resnxt101dm = backbone('resnext101', pretrained=False, finetuning=True, num_classes=2)
resnxt101dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/resnxt101.pt'))
vitb16dm = backbone('vit_b_16', pretrained=False, finetuning=True, num_classes=2)
vitb16dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/vitb16.pt'))
vitb32dm = backbone('vit_b_32', pretrained=False, finetuning=True, num_classes=2)
vitb32dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/vitb32.pt'))
vitl16dm = backbone('vit_l_16', pretrained=False, finetuning=True, num_classes=2)
vitl16dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/vitl16.pt'))
vitl32dm = backbone('vit_l_32', pretrained=False, finetuning=True, num_classes=2)
vitl32dm.load_state_dict(torch.load(models_dir+'/dm-overfitting/vitl32.pt'))

dense121gan = backbone('densenet121', pretrained=False, finetuning=True, num_classes=2)
dense121gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/dense121.pt'))
dense161gan = backbone('densenet161', pretrained=False, finetuning=True, num_classes=2)
dense161gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/dense161.pt'))
dense169gan = backbone('densenet169', pretrained=False, finetuning=True, num_classes=2)
dense169gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/dense169.pt'))
dense201gan = backbone('densenet201', pretrained=False, finetuning=True, num_classes=2)
dense201gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/dense201.pt'))
effb0gan = backbone('efficientnet_b0', pretrained=False, finetuning=True, num_classes=2)
effb0gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/effb0.pt'))
effb4gan = backbone('efficientnet_b4', pretrained=False, finetuning=True, num_classes=2)
effb4gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/effb4.pt'))
effwdb0gan = backbone('efficientnet_widese_b0', pretrained=False, finetuning=True, num_classes=2)
effwdb0gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/effwdb0.pt'))
effwdb4gan = backbone('efficientnet_widese_b4', pretrained=False, finetuning=True, num_classes=2)
effwdb4gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/effwdb4.pt'))
# googlgan = backbone('googlenet', pretrained=False, finetuning=True, num_classes=2)
# googlgan.load_state_dict(torch.load(models_dir+'/gan-overfitting/googl.pt'))
res18gan = backbone('resnet18', pretrained=False, finetuning=True, num_classes=2)
res18gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/res18.pt'))
res34gan = backbone('resnet34', pretrained=False, finetuning=True, num_classes=2)
res34gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/res34.pt'))
res50gan = backbone('resnet50', pretrained=False, finetuning=True, num_classes=2)
res50gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/res50.pt'))
res101gan = backbone('resnet101', pretrained=False, finetuning=True, num_classes=2)
res101gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/res101.pt'))
res152gan = backbone('resnet152', pretrained=False, finetuning=True, num_classes=2)
res152gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/res152.pt'))
resnxt101gan = backbone('resnext101', pretrained=False, finetuning=True, num_classes=2)
resnxt101gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/resnxt101.pt'))
vitb16gan = backbone('vit_b_16', pretrained=False, finetuning=True, num_classes=2)
vitb16gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/vitb16.pt'))
vitb32gan = backbone('vit_b_32', pretrained=False, finetuning=True, num_classes=2)
vitb32gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/vitb32.pt'))
vitl16gan = backbone('vit_l_16', pretrained=False, finetuning=True, num_classes=2)
vitl16gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/vitl16.pt'))
vitl32gan = backbone('vit_l_32', pretrained=False, finetuning=True, num_classes=2)
vitl32gan.load_state_dict(torch.load(models_dir+'/gan-overfitting/vitl32.pt'))

dense121real = backbone('densenet121', pretrained=False, finetuning=True, num_classes=2)
dense121real.load_state_dict(torch.load(models_dir+'/real-overfitting/dense121.pt'))
dense161real = backbone('densenet161', pretrained=False, finetuning=True, num_classes=2)
dense161real.load_state_dict(torch.load(models_dir+'/real-overfitting/dense161.pt'))
dense169real = backbone('densenet169', pretrained=False, finetuning=True, num_classes=2)
dense169real.load_state_dict(torch.load(models_dir+'/real-overfitting/dense169.pt'))
dense201real = backbone('densenet201', pretrained=False, finetuning=True, num_classes=2)
dense201real.load_state_dict(torch.load(models_dir+'/real-overfitting/dense201.pt'))
effb0real = backbone('efficientnet_b0', pretrained=False, finetuning=True, num_classes=2)
effb0real.load_state_dict(torch.load(models_dir+'/real-overfitting/effb0.pt'))
effb4real = backbone('efficientnet_b4', pretrained=False, finetuning=True, num_classes=2)
effb4real.load_state_dict(torch.load(models_dir+'/real-overfitting/effb4.pt'))
effwdb0real = backbone('efficientnet_widese_b0', pretrained=False, finetuning=True, num_classes=2)
effwdb0real.load_state_dict(torch.load(models_dir+'/real-overfitting/effwdb0.pt'))
effwdb4real = backbone('efficientnet_widese_b4', pretrained=False, finetuning=True, num_classes=2)
effwdb4real.load_state_dict(torch.load(models_dir+'/real-overfitting/effwdb4.pt'))
# googlreal = backbone('googlenet', pretrained=False, finetuning=True, num_classes=2)
# googlreal.load_state_dict(torch.load(models_dir+'/real-overfitting/googl.pt'))
res18real = backbone('resnet18', pretrained=False, finetuning=True, num_classes=2)
res18real.load_state_dict(torch.load(models_dir+'/real-overfitting/res18.pt'))
res34real = backbone('resnet34', pretrained=False, finetuning=True, num_classes=2)
res34real.load_state_dict(torch.load(models_dir+'/real-overfitting/res34.pt'))
res50real = backbone('resnet50', pretrained=False, finetuning=True, num_classes=2)
res50real.load_state_dict(torch.load(models_dir+'/real-overfitting/res50.pt'))
res101real = backbone('resnet101', pretrained=False, finetuning=True, num_classes=2)
res101real.load_state_dict(torch.load(models_dir+'/real-overfitting/res101.pt'))
res152real = backbone('resnet152', pretrained=False, finetuning=True, num_classes=2)
res152real.load_state_dict(torch.load(models_dir+'/real-overfitting/res152.pt'))
resnxt101real = backbone('resnext101', pretrained=False, finetuning=True, num_classes=2)
resnxt101real.load_state_dict(torch.load(models_dir+'/real-overfitting/resnxt101.pt'))
vitb16real = backbone('vit_b_16', pretrained=False, finetuning=True, num_classes=2)
vitb16real.load_state_dict(torch.load(models_dir+'/real-overfitting/vitb16.pt'))
vitb32real = backbone('vit_b_32', pretrained=False, finetuning=True, num_classes=2)
vitb32real.load_state_dict(torch.load(models_dir+'/real-overfitting/vitb32.pt'))
vitl16real = backbone('vit_l_16', pretrained=False, finetuning=True, num_classes=2)
vitl16real.load_state_dict(torch.load(models_dir+'/real-overfitting/vitl16.pt'))
vitl32real = backbone('vit_l_32', pretrained=False, finetuning=True, num_classes=2)
vitl32real.load_state_dict(torch.load(models_dir+'/real-overfitting/vitl32.pt'))

# %% testing phase
loss = nn.CrossEntropyLoss()
print('-    DM')
testing(model=dense121dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense161dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense169dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense201dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=effb0dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=effb4dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=effwdb0dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=effwdb4dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=googldm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res18dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res34dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res50dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res101dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res152dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=resnxt101dm, test_loader=dmloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=vitb16dm, test_loader=dmloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=vitb32dm, test_loader=dmloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=vitl16dm, test_loader=dmloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=vitl32dm, test_loader=dmloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')

print('-    GAN')
testing(model=dense121gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense161gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense169gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense201gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=effb0gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=effb4gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=effwdb0gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=effwdb4gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=googlgan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res18gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res34gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res50gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res101gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res152gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=resnxt101gan, test_loader=ganloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=vitb16gan, test_loader=ganloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=vitb32gan, test_loader=ganloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=vitl16gan, test_loader=ganloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=vitl32gan, test_loader=ganloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')

print('-    REAL')
testing(model=dense121real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense161real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense169real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=dense201real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=effb0real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=effb4real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=effwdb0real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=effwdb4real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=googlreal, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res18real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res34real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res50real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res101real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=res152real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=resnxt101real, test_loader=realloader, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=vitb16real, test_loader=realloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
testing(model=vitb32real, test_loader=realloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=vitl16real, test_loader=realloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
# testing(model=vitl32real, test_loader=realloader_vits, loss_fn=loss, save_cm=False, average='binary', model_name='')
# %%
